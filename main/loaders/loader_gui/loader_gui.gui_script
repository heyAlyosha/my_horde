local storage_gui = require "main.storage.storage_gui"
local storage_collection = require "main.storage.storage_collection"


function init(self)
	msg.post(".", "acquire_input_focus")
	self.nodes = {
		loader_wrap = gui.get_node("loader_template/loader_wrap"),
		loader_icon = gui.get_node("loader_template/loader_icon"),
		loader_progress = gui.get_node("loader_template/loader_progress"),
	}

	local node_body = false -- Если не нужно скрывать контент
	gui_loader.visible(false, node_wrap, node_icon, node_body, self)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("layout_changed") then
		for id, v in pairs(storage_gui.components_visible) do
			msg.post("/loader_gui", "reload_gui_component", {id = id})
		end

		if storage_collection.components_visible.inventary then
			msg.post("main:/loader_collection", "visible", {id = "inventary", visible = false})
		end

	elseif message_id == hash("set_loader") then
		if message.visible == false then
			gui.set_enabled(self.nodes.loader_wrap, false)

		else
			gui.set_enabled(self.nodes.loader_wrap, true)

			if message.progress then
				gui_loyouts.set_text(self, self.nodes.loader_progress, tostring(message.progress) .. "%")
				gui.set_enabled(self.nodes.loader_progress, true)
			else
				gui.set_enabled(self.nodes.loader_progress, false)
			end
		end 

	end
end
