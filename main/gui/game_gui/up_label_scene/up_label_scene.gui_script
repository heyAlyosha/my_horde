local gui_size = require "main.gui.modules.gui_size"
local gui_input = require "main.gui.modules.gui_input"
local storage_player = require "main.storage.storage_player"
local gui_loyouts = require "main.gui.modules.gui_loyouts"

function init(self)
	gui.set_render_order(4)
	self.animate_to_second = 50
	self.delay_animation = 2

	self.nodes = {
		wrap = gui.get_node("wrap"),
		wrap_text = gui.get_node("wrap_text"),
		text = gui.get_node("text")
	}

	self.start_position = gui.get_position(self.nodes.text)

end

function update(self, dt)
	--[[
	if storage_player.orientation == "horisontal" and self.position_y ~= storage_player.camera_yoffset then
		self.position_y = storage_player.camera_yoffset
		gui_loyouts.set_position(self, self.nodes.wrap, -self.position_y, "y")

	elseif storage_player.orientation == "vertical" and self.position_y ~= storage_player.camera_yoffset then
		--self.position_y = storage_player.camera_yoffset / 2 
		gui_loyouts.set_position(self, self.nodes.wrap, 0, "y")
	end
	--]]
end

function final(self)
	gui_input.on_final(self)
end


function on_message(self, message_id, message, sender)
	input_remote_tv.on_message(self, message_id, message, sender)
	gui_loyouts.on_message(self, message_id, message)

	if message_id == hash("add_text") then
		gui.cancel_animation(self.nodes.text, "position.x")
		gui_loyouts.set_position(self, self.nodes.text, self.start_position)
		local text = message.text or ""

		gui_loyouts.set_text(self, self.nodes.text, text)
		local width_wrap = gui.get_size(self.nodes.wrap_text).x
		local width = gui_size.get_size_gui_text(self.nodes.text).width

		-- Если ширина текста больше рамки, включаем анимацию
		if width_wrap < width then
			local left_position = width - width_wrap
			local duration = left_position / self.animate_to_second 
			gui.animate(self.nodes.text, "position.x", -left_position, gui.EASING_LINEAR, duration, self.delay_animation, nil, gui.PLAYBACK_LOOP_FORWARD)
		end

	elseif message_id == hash("layout_changed") and message.id == hash("Portrait") then
		--gui_loyouts.set_position(self, self.nodes.wrap, 0, "y")
	end
end
