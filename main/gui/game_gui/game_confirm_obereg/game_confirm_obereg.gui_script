local color = require("color-lib.color")
local gui_animate = require "main.gui.modules.gui_animate"
local game_content_artifact = require "main.game.content.game_content_artifact"
local gui_input = require "main.gui.modules.gui_input"
local gui_loyouts = require "main.gui.modules.gui_loyouts"
local gui_lang = require "main.lang.gui_lang"
local lang_core = require "main.lang.lang_core"

function init(self)
	gui.set_render_order(6)
	self.node_wrap = gui.get_node("wrap_object")
	self.node = gui.get_node("title")
	self.node_icon = gui.get_node("icon")
	self.id = "game_confirm_obereg"
	self.artifact = game_content_artifact.get_item("try_1")
	
	gui_loyouts.play_flipbook(self, self.node_icon, self.artifact.icon)
	--gui.set_color(self.node, vmath.vector4(0, 0, 0, 0))
	gui_animate.areol(self, "areola_template", speed_to_second, "loop", function_end, 1.5)

	msg.post("main:/sound", "play", {sound_id = "popup_show"})
	msg.post("main:/sound", "play", {sound_id = "modal_top_3_2"})
	
end

function final(self)
	gui_input.on_final(self)
end

function on_message(self, message_id, message, sender)
	input_remote_tv.on_message(self, message_id, message, sender)
	gui_loyouts.on_message(self, message_id, message)

	if message_id == hash("visible") then
		local data = message.value or {}
		self.name = data.name or  ""
		self.title = lang_core.get_text(self, "_player_use_obereg", before_str, after_str, {name = self.name})
		self.type_animation = data.type_animation or "default"

		gui_loyouts.set_text(self, self.node, utf8.upper(self.title))
		gui_animate.show_elem_popping(self, self.node_wrap, duration, delay, function_end_animation)

	elseif message_id == hash("hidden") then
		local duration = 0.25
		local easing = gui.EASING_LINEAR

		gui.animate(self.node_wrap, "scale", vmath.vector3(2), easing, duration)
		gui.animate(self.node_wrap, "color", vmath.vector4(0, 0, 0, 0), easing, duration, 0 , function (self)
			msg.post("/loader_gui", "visible", {
				id = self.id,
				visible = false,
				parent_id = self.parent_id
			})
		end)
		
	end
end