go.property("loading", true)

local core_live_update = require "main.game.live_update.core_live_update"

function init(self)
	if self.loading then
		timer.delay(3, false, function (self)
			core_live_update.load(self, "#collectionproxy", function (self, err)
				if not err then
					msg.post("#collectionproxy", hash("load"))
				end
			end, callback_progress)
		end)
	end
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		-- Прокси коллекция с гуи компонентом загружена
		msg.post(sender, "init")
		msg.post(sender, "enable")

		go.set("main:/sound#sound", "load_files", true)
		go.set("main:/music#music", "load_files", true)
		msg.post("main:/music#music", "play_last_music")
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
