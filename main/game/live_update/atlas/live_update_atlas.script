local live_update_atlas = require("main.game.live_update.atlas.live_update_atlas")
local storage_live_update = require "main.storage.storage_live_update"

function init(self)
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collection_proxy_activate") then
		-- Акитивировать прокси с атласом
		msg.post(message.url, hash("load"))
		

	elseif message_id == hash("script_atlas_init") then
		-- Активация скрипта внутри прокси
		local resource_atlas = message.atlas
		local atlas_id_hash = message.atlas_id_hash
		live_update_atlas.script_is_init(self, resource_atlas, atlas_id_hash)

	elseif message_id == hash("add_texture_gui") then
		-- Добавление текстуры в гуи
		local url = message.url
		local atlas_id = message.atlas_id
		local resource_atlas = live_update_atlas.resource_atlases[atlas_id]

		go.set(url, "textures", resource_atlas, {key = atlas_id})
		msg.post(url, "live_update_add_texture", {atlas_id = atlas_id, resource_atlas = resource_atlas})

	elseif message_id == hash("proxy_loaded") then
		-- Включаем прокси
		msg.post(sender, "init")
		msg.post(sender, "enable")

	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
