go.property("count", 10)
go.property("type", hash("horde"))
go.property("icon", hash("zombie_0_2_default"))
go.property("activation", true)
go.property("id_activation", hash(""))

function init(self)
	go.set("#shadow", "tint", vmath.vector4(0, 0, 0, 0.2)) -- <1>
	label.set_text("#count", self.count)
	msg.post(".", "activation", {activation = self.activation})
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end


function on_message(self, message_id, message, sender)
	if message_id == hash("activation") then
		-- Активация или не кнопки
		self.activation = message.activation
		if self.activation then
			msg.post("#icon" , "enable")
			msg.post("#count" , "enable")
			sprite.play_flipbook("#sprite", "btn_map_no_activation")
		else
			msg.post("#icon" , "disable")
			msg.post("#count" , "disable")
			sprite.play_flipbook("#sprite", "btn_map_activation")
		end

	elseif message_id == hash("trigger_response") then
		if self.activation then
			local url = msg.url(message.other_id)
			local url_script = msg.url(url.socket, url.path, "script")

			local horde_count = go.get(url_script, "horde_count_current")

			-- Достаточное ли количество
			if horde_count >= self.count then
				msg.post("map#map_scripts", "activation_point", {
					id_activation = self.id_activation
				})
				msg.post(url, "activation_btn_zone", {
					id_activation = self.id_activation
				})
				msg.post(".", "activation", {activation = false})
			end
		end
	end
end


function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
