local storage_game = require "main.game.storage.storage_game"
local game_core_gamers = require "main.game.core.game_core_gamers"
local game_content_bots = require "main.game.content.game_content_bots"
local game_content_wheel = require "main.game.content.game_content_wheel"
local bot_aim = require "main.game.core.bot.modules.bot_aim"
local bot_artifact = require "main.game.core.bot.modules.bot_artifact"
local bot_symbol = require "main.game.core.bot.modules.bot_symbol"

-- Очистка бота
local function clear_bot(self)
	-- Сбрасываем
	self.aim = nil
	self.time_aim = nil
	self.dif = nil
	self.full_rotate_aim = nil
end

function init(self)
	--pprint(game_content_bots.get("igor"))
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	
end

function fixed_update(self, dt)
	if self.aim then
		bot_aim.on_update(self, dt)
	end
end

function on_message(self, message_id, message, sender)
	if message_id ~= hash("start_aim") or self.last_bot_id ~= message.player_id then
		clear_bot(self)
	end

	-- Новый бот
	if self.last_bot_id ~= message.player_id then
		--Сбрасываем успешщные ответы на вопросы подряд
		self.success_response = 0
		self.last_bot_id = message.player_id
	end

	if message_id == hash("start_aim") then
		bot_aim.on_message(self, message_id, message)

	elseif message_id == hash("clear_bot") then
		clear_bot(self)

	elseif message_id == hash("start_artifact") then
		local sector_id = message.sector_id
		local player_id = message.player_id
		local bot_id = message.bot_id
		local sector = game_content_wheel.get_item(self, sector_id)
		local sector_type = "x2" or sector.type
		
		local bot = game_core_gamers.get_player(self, player_id, game_content_wheel)
		local types = bot_artifact.sort_artifact_types(self, bot, sector_type)

		bot_artifact.activate(self, bot, types, sector_id)

	elseif message_id == hash("start_symbol") then
		local sector_id = message.sector_id
		local player_id = message.player_id
		local bot_id = message.bot_id
		local bot = game_core_gamers.get_player(self, player_id, game_content_wheel)

		timer.delay(math.random(100, 200)/100, false, function (self)
			bot_symbol.activate(self, bot_id, sector_id)
		end)

	elseif message_id == hash("sector_open_symbol") then
		timer.delay(math.random(100, 200)/100, false, function (self)
			bot_symbol.sector_open_symbol(self)
		end)

	elseif message_id == hash("open_symbol") then
		if message.success then
			self.success_response = self.success_response + 1
		else
			self.success_response = 0
		end

		--[[
	elseif message_id == hash("start_obereg") then
		-- Включаем оберег
		local bot_id = message.bot_id
		local bot = game_core_gamers.get_player(self, bot_id, game_content_wheel)
		if message.success then
			storage_game.bot.success_response = storage_game.bot.success_response + 1
		else
			storage_game.bot.success_response = 0
		end
		--]]

	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
