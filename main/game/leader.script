local storage_player = require "main.storage.storage_player"

-- Запись отображения ведущего
local function set_visible(self, visible, animate)
	local position
	local animate = animate or 0

	self.visible = visible
	if self.visible then
		position = self.positions.visible
	else
		position = self.positions.hidden
	end

	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, position, go.EASING_LINEAR, animate)
end

-- Формирование позиции
local function render_position(self, position_visible)
	self.positions = {
		visible = position_visible,
		hidden = vmath.vector3(0),
	}

	self.positions.hidden = vmath.vector3(self.positions.visible.x, self.positions.visible.y, self.positions.visible.z)
	self.positions.hidden.x = self.positions.hidden.x + storage_player.window_width
end

function init(self)
	render_position(self, go.get_position())
	set_visible(self, false)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)

	if message_id == hash("visible") then
		local animate = message.animate or 0
		set_visible(self, message.visible, animate)

	elseif message_id == hash("change_orientation") then
		render_position(self, message.position)

		if self.visible then
			set_visible(self, true)
		end

	elseif message_id == hash("window_resize") then
		render_position(self, self.positions.visible)
		set_visible(self, self.visible)

	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
