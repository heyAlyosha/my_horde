--Удар или пуля
go.property("damage", 0)
go.property("damage_count_object", 5)
go.property("command", hash("player")) -- Id комманды, объектам которой наносится урон
go.property("type", hash("hit")) -- Тип пули (hit)
go.property("parent", msg.url())
go.property("visible_attack", true)
go.property("distantion", 150)
go.property("speed", 150)
go.property("dir", vmath.vector3())

function init(self)
	if self.type == hash("hit") then
		-- Если удар
		if not self.visible_attack then
			msg.post("#body", "disable")
			timer.delay(0.1, false, function (self)
				go.delete()
			end)
		else
			sprite.play_flipbook("#body", "slash", function (self)
				self.delete = true
				go.delete()
			end)
		end

	elseif self.type == hash("bullet") then
		local dir = vmath.normalize(self.dir)

		local position_to = go.get_position() + dir * self.distantion
		local duration = vmath.length(go.get_position() - position_to) / self.speed

		-- Переворачиваем спрайт пули в напралвении
		sprite.set_hflip("#body", self.dir.x > 0)

		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, position_to, go.EASING_LINEAR, duration, 0, function (self)
			go.delete()
		end)
	end
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if self.type == hash("hit") and not self.delete then
		go.set_position(go.get_position(self.parent))
	end
end


function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") and message.other_group == hash("default") then
		go.delete()

	elseif message_id == hash("trigger_response") and message.own_group == hash("bullet") then
		if message.enter and self.damage_count_object > 0 then 
			-- В кого то попадает
			if self.type == hash("hit") then
				
			end
			-- Проверяем, что объект из другой команды
			local url_script = msg.url(nil, message.other_id, "script")
			local command_object = go.get(url_script, "command")

			if self.command ~= command_object then
				self.damage_count_object = self.damage_count_object - 1
				msg.post(message.other_id, "damage", {damage = self.damage, parent = self.parent, position = go.get_position()})

				if self.damage_count_object <= 0 then
					self.delete = true
					go.delete()
				end
			end
		end
	end
	
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
