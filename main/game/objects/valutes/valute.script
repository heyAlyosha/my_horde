go.property("type_valute", hash("coin"))
go.property("count", 1)
go.property("value", 0)
go.property("distantion", 15)
go.property("duration_animate", 0.5)

function init(self)
	self.types_valute = {}
	self.types_valute[hash("coin")] = {id = "coin", animation_id = "icon-gold-1"}
	self.types_valute[hash("xp")] = {id = "xp", animation_id = "icon-gold-1"}
	self.types_valute[hash("trash")] = {id = "trash", animation_id = "icon-gold-1"}
	self.types_valute[hash("trophy")] = {id = "trash", animation_id = "icon-gold-1"}

	self.item = self.types_valute[self.type_valute]

	-- Иконка
	sprite.play_flipbook("#object", self.item.animation_id)

	-- Случайное направление выброса предметов
	local random_dir = vmath.vector3(1, 0, 0)
	math.randomseed()
	local random_p = math.random(1, 628) / 100
	local rot = vmath.quat_rotation_z(random_p)
	random_dir = vmath.rotate(rot, random_dir) * self.distantion

	local position_to = go.get_position() + random_dir

	-- Проверяем столкновения коллизии
	local result = physics.raycast(go.get_position(), position_to, {hash("default")}, options)
	if result  then
		position_to = result.position
		
	end

	position_to = position_functions.add_perspective_z(position_to)

	-- Анимация полёта
	go.animate(".", "position.x", go.PLAYBACK_ONCE_FORWARD, position_to.x, go.EASING_LINEAR, self.duration_animate)
	go.animate(".", "position.y", go.PLAYBACK_ONCE_FORWARD, position_to.y + 10, go.EASING_OUTCUBIC, self.duration_animate * 0.25, 0, function (self)
		go.animate(".", "position.y", go.PLAYBACK_ONCE_FORWARD, position_to.y, go.EASING_OUTBOUNCE, self.duration_animate * 0.75)
	end)

	timer.delay(self.duration_animate, false, function (self)
		-- Активируем валюту
		go.set_position(position_to)
		-- Анимация полёта
		msg.post("#shadow", "disable")
		go.animate(".", "position.y", go.PLAYBACK_LOOP_PINGPONG, position_to.y + 5, go.EASING_INOUTCUBIC, 2)
		-- Создаём тень
		self.shadow = factory.create("#shadow_factory", position_to)
	end)
end

function on_final(self)
	if self.shadow then
		
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end
