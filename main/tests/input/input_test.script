function init(self)
	msg.post(".", "acquire_input_focus")
end

local function debugLog( action , action_id)
	local add_str = ""
	local str = "gamepad code: ";

	for i = 1, #action.gamepad_axis do
		if math.abs(action.gamepad_axis[i]) > 0.5 then
			add_str = add_str .. " action.gamepad_axis["..i.."]("..action.gamepad_axis[i]..")      "
		end
	end

	for i = 1, #action.gamepad_buttons do
		if action.gamepad_buttons[i] > 0.5 then
			pprint(action)
			add_str = add_str .. " action.gamepad_buttons["..i.."]("..action.gamepad_buttons[i]..")      "
		end
	end

	for i = 1, #action.gamepad_hats do
		if action.gamepad_hats[i] > 0.5 then
			add_str = add_str .. " action.gamepad_hats["..i.."]("..action.gamepad_hats[i]..")      "
		end
	end

	if add_str and add_str ~= "" then
		str = str .. add_str
	end

	label.set_text("main:/input_test/go#value", str)
end

function on_input(self, action_id, action)
	if false and action_id then
		label.set_text("main:/input_test/go#value", "action_id: "..tostring(action_id))
		return
	elseif action_id == hash("gamepad_connected") then
		label.set_text("main:/input_test/go#value", "action_id: "..tostring(action_id))
		return

	elseif false  and action_id == hash("raw") then
		debugLog(action)

	end
	
end